# -----------------------------------------------------------------------------------------------------------
#                        === Matriz de Tokens ===
# 
# Matriz de Tokens asociadas a los estados del automata. 
# La Mariz esta completa con los codigos correspondientes a cada Token.
#
# Matriz de 24x34
# -1 --> Estado Final
# -2 --> No hay Estado Eiguiente [ERROR]
#
#   Mapa de Tokens:
#
#       token_list                  - Par de Codigo de Token con su label.
# 
#    Funciones:
#       get_token_id()              - Función que recibe posicion de Matriz y retorna codigo de token correspondiente.
#       get_token_label()           - Función que recibe posicion de Matriz y retorna label de token correspondiente.
# -----------------------------------------------------------------------------------------------------------


# Matriz de 24x34
token_table =  [
    [-2,   -2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-1],
    [-2,	-2,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256,	256],
    [257,	-2,	257,	257,	257,	257,	257,	 -2,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257,	257],
    [258,	-2,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258,	258],
    [-2,	    -2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259,	259],
    [278,	278,	278,	278,	278,	278,	278,	278,	278,	278,	278,	278,	278,	7,	278,	278,	278,	278,	278,	278,	278,	278,	278,	278],
    [-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270,	270],
    [271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271,	271],
    [272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272,	272],
    [273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273,	273],
    [277,	277,	277,	277,	277,	277,	277,	277,	277,	277,	277,	 -2,	277,	277,	277,	277,	277,	277,	277,	277,	277,	277,	277,	277],
    [280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280,	280],
    [276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276,	276],
    [279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279,	279],
    [281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	281,	 -2,	281,	281,	281,	281],
    [283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283,	283],
    [282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	282,	 -2,	282,	282,	282,	282],
    [284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284,	284],
    [289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	289,	 -2,	289,	289,	289,	289],
    [286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286,	286],
    [290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	290,	 -2,	290,	290,	290,	290],
    [285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285,	285],
    [-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287,	287],
    [-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288,	288],
    [274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274,	274],
    [275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275,	275],
    [292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292,	292],
    [-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2,	-2],
    [291,    291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291,	291]
]

token_list = {
    256: "ID",
    257: "CTE_NUMERICA",
    258: "CTE_REAL",
    259: "CTE_STRING",
    270: "LLAVE_ABRE",
    271: "LLAVE_CIERRA",
    272: "PARENTESIS_ABRE",
    273: "PARENTESIS_CIERRA",
    274: "PUNTO_COMA",
    275: "COMA",
    276: "OP_RESTA",
    277: "OP_SUMA",
    278: "OP_DIVISION",
    279: "OP_MULTIPLICACION",
    280: "OP_CONCAT",
    281: "COMP_MENOR",
    282: "COMP_MAYOR",
    283: "COMP_MENOR_IGUAL",
    284: "COMP_MAYOR_IGUAL",
    285: "COMP_IGUAL",
    286: "COMP_DISTINTO",
    287: "OP_OR",
    288: "OP_AND",
    289: "OP_NOT",
    290: "OP_ASIGNACION",
    291: "CONDICION_TERNARIA",
    292: "DOS_PUNTOS"
}


def get_token_id(last, event):
    return token_table[last][event]

def get_token_label(last, event):
    return token_list[get_token_id(last, event)]